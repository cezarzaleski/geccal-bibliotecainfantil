name: Run build, test and sonar checks

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Run build with gradle
        run: ./gradlew build -x test -x componentTest

  test:
    name: Unit Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Run tests with gradle
        run: ./gradlew test


  componentTest:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: bitnami/mysql:8.0
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
    steps:
      - uses: actions/checkout@v2
      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:mysql://mysql:3306/db
          user: user
          password: password
          locations: filesystem:./src/main/resources/db/migration
      - run: echo 'testing'

#  componentTest:
#    name: Component Test
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          sudo /etc/init.d/mysql start
#          mysql -e 'CREATE DATABASE biblioteca_infatil_test;' -uroot -proot
#          mysql -e 'SHOW DATABASES;' -uroot -proot
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: 'adopt'
#          cache: gradle
##      - name: Run tests with gradle
#        run: ./gradlew componentTest

#  sonarcloud-scan:
#    name: SonarCloud Scan
#    needs: test
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: 'adopt'
#          cache: gradle
#      - name: Cache Gradle packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew build codeCoverageReport sonar --info