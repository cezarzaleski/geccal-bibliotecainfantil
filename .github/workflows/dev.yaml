name: Run build, test and sonar checks

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build:
    name: Gradle Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run build with gradle
        run: ./gradlew build -x test -x componentTest

  test:
    name: Unit Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run tests with gradle
        run: ./gradlew test -i
      - name: Save test report
        uses: actions/upload-artifact@v3
        with:
          name: Test report
          path: |
            build/test-results
            build/reports/
          if-no-files-found: error

  componentTest:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: bitnami/mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 10
    steps:
      - uses: actions/checkout@v3
      - uses: joshuaavalon/flyway-action@v3.0.0
        with:
          url: jdbc:mysql://mysql:3306/db
          user: user
          password: password
          locations: filesystem:./src/main/resources/db/migration
      - run: echo 'testing'
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run componentTest with gradle
        run: ./gradlew componentTest
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_HOST: localhost
          MYSQL_PORT: 3306
      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: component-test-results
          path: |
            build/test-results
            build/reports/
          if-no-files-found: error

  testReport:
    runs-on: ubuntu-latest
    needs: [ test, componentTest ]
    steps:
      - name: List files
        run: ls -lha
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - run: gradle jacocoTestReport
      - uses: actions/upload-artifact@v3
        with:
          name: report
          path: build/reports/jacoco/
          if-no-files-found: error

  coverage:
    runs-on: ubuntu-latest
    needs: [ test, componentTest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - run: gradle jacocoTestCoverageVerification -i

  sonarcloud-scan:
    name: SonarCloud Scan
    needs: [ test, componentTest ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
          cache: gradle
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build jacocoTestReport sonar --info